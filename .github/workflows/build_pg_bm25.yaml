# workflows/publish-pg_bm25.yml
#
# Publish pg_bm25
# Build and publish the pg_bm25 extension as a .deb to GitHub Releases.

name: Publish pg_bm25

on:
  workflow_dispatch:
    inputs:
      version:
        description: "The version to set for the pg_bm25 release. This publishes the latest commit of the chosen branch and uploads it to the pre-existing GitHub Release of the provided version."
        required: true
        default: "v0.4.3"

concurrency:
  group: publish-pg_bm25-${{ github.event.inputs.version }}
  cancel-in-progress: true

jobs:
  publish-pg_bm25:
    name: Publish pg_bm25 for PostgreSQL ${{ matrix.pg_version }} on ${{ matrix.arch }}
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - runner: ubuntu-latest
            pg_version: 16
            arch: amd64
          - runner: ubicloud-standard-8-ubuntu-2204-arm
            pg_version: 16
            arch: arm64
    permissions:
      contents: read
      packages: write
      actions: write
    steps:
      - name: Checkout Git Repository
        uses: actions/checkout@v4
        with:
            repository: paradedb/paradedb
            ref: ${{ github.event.inputs.version }}

      - name: Install Rust
        uses: dtolnay/rust-toolchain@1.73.0

      - name: Retrieve Ubuntu & GitHub Tag Versions
        id: version
        run: |
          # If no workflow_dispatch version is provided, we use workflow tag trigger version
          if [ -z "${{ github.event.inputs.version }}" ]; then
            echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
          else
            echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          fi
          echo "ubuntu_version=$(lsb_release -rs | sed 's/\.//')" >> $GITHUB_OUTPUT

      - name: Install & Configure Supported PostgreSQL Version
        run: |
          wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
          sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
          sudo apt-get update && sudo apt-get install -y postgresql-${{ matrix.pg_version }} postgresql-server-dev-${{ matrix.pg_version }} debhelper devscripts dput gnupg
          sudo chown -R $(whoami) /usr/share/postgresql/${{ matrix.pg_version }}/extension/ /usr/lib/postgresql/${{ matrix.pg_version }}/lib/
          echo "/usr/lib/postgresql/${{ matrix.pg_version }}/bin" >> $GITHUB_PATH

      - name: Install pgrx
        run: cargo install --locked cargo-pgrx --version 0.11.1

      - name: Initialize pgrx for Current PostgreSQL Version
        working-directory: pg_bm25/
        run: cargo pgrx init --pg${{ matrix.pg_version }}=/usr/lib/postgresql/${{ matrix.pg_version }}/bin/pg_config

      - name: Package pg_bm25 Extension with pgrx
        working-directory: pg_bm25/
        run: cargo pgrx package --features telemetry

      - name: Create .deb Package
        run: |
          # Create installable package
          mkdir archive
          cp `find target/release -type f -name "pg_bm25*"` archive
          package_dir=pg_bm25-${{ steps.version.outputs.version }}-pg${{ matrix.pg_version }}-${{ matrix.arch }}-ubuntu${{ steps.version.outputs.ubuntu_version }}

          # Copy files into directory structure
          mkdir -p ${package_dir}/usr/lib/postgresql/lib
          mkdir -p ${package_dir}/var/lib/postgresql/extension
          cp archive/*.so ${package_dir}/usr/lib/postgresql/lib
          cp archive/*.control ${package_dir}/var/lib/postgresql/extension
          cp archive/*.sql ${package_dir}/var/lib/postgresql/extension

          # Symlinks to copy files into directory structure
          mkdir -p ${package_dir}/usr/lib/postgresql/${{ matrix.pg_version }}/lib
          mkdir -p ${package_dir}/usr/share/postgresql/${{ matrix.pg_version}}/extension
          cp archive/*.so ${package_dir}/usr/lib/postgresql/${{ matrix.pg_version }}/lib
          cp archive/*.control ${package_dir}/usr/share/postgresql/${{ matrix.pg_version }}/extension
          cp archive/*.sql ${package_dir}/usr/share/postgresql/${{ matrix.pg_version }}/extension

          # Create control file (package name cannot have underscore)
          mkdir -p ${package_dir}/DEBIAN
          touch ${package_dir}/DEBIAN/control
          deb_version=${{ steps.version.outputs.version }}
          CONTROL_FILE="${package_dir}/DEBIAN/control"
          echo 'Package: pg-bm25' >> $CONTROL_FILE
          echo 'Version:' ${deb_version} >> $CONTROL_FILE
          echo 'Architecture: ${{ matrix.arch }}' >> $CONTROL_FILE
          echo 'Maintainer: ParadeDB <support@paradedb.com>' >> $CONTROL_FILE
          echo 'Description: Full text search for PostgreSQL using BM25' >> $CONTROL_FILE

          # Create .deb package
          sudo chown -R root:root ${package_dir}
          sudo chmod -R 00755 ${package_dir}
          sudo dpkg-deb --build --root-owner-group ${package_dir}

      # We retrieve the GitHub release for the specific release version
      - name: Retrieve GitHub Release Upload URL
        id: upload_url
        run: echo UPLOAD_URL=$(curl --silent https://api.github.com/repos/${{ github.repository }}/releases/tags/v${{ steps.version.outputs.version }} | jq .upload_url --raw-output) >> $GITHUB_OUTPUT

      - name: Upload pg_bm25 .deb to GitHub Release
        uses: shogo82148/actions-upload-release-asset@v1
        with:
          github_token: ${{ github.token }}
          upload_url: ${{ steps.upload_url.outputs.upload_url }}
          asset_path: ./pg_bm25-${{ steps.version.outputs.version }}-pg${{ matrix.pg_version }}-${{ matrix.arch }}-ubuntu${{ steps.version.outputs.ubuntu_version }}.deb
          asset_name: pg_bm25-v${{ steps.version.outputs.version }}-pg${{ matrix.pg_version }}-${{ matrix.arch }}-ubuntu${{ steps.version.outputs.ubuntu_version }}.deb